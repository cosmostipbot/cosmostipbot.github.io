{"version":3,"sources":["fonts/Roboto/Roboto-Regular.ttf","components/TopNavbar.js","components/TopHeader.js","components/Footer.js","pages/AboutUs.js","pages/Faq.js","pages/Home.js","pages/HowTo.js","pages/PrivacyPolicy.js","pages/Terms.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TopNavbar","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","NavDropdown","title","Item","Divider","Component","TopHeader","Jumbotron","src","alt","phantom","display","padding","height","width","foot","backgroundColor","borderTop","textAlign","position","left","bottom","link","color","Footer","style","React","AboutUs","Container","Row","Col","FAQ","Home","map","command","HowTo","PrivacyPolicy","Terms","App","exact","path","component","Faq","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.28458b99.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Roboto-Regular.11eabca2.ttf\";","import React, { Component } from \"react\";\n\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\n\nexport default class TopNavbar extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar bg=\"light\" expand=\"lg\">\n          <Navbar.Brand href=\"#home\">@cosmostipbot</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"/\">Home</Nav.Link>\n              <Nav.Link href=\"/howto\">How-To</Nav.Link>\n              <NavDropdown title=\"About\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"/faq\">FAQ</NavDropdown.Item>\n                <NavDropdown.Item href=\"/terms\">Terms</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"/about\">About Us</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n            {/* <Form inline>\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n            <Button variant=\"outline-success\">Search</Button>\n            </Form> */}\n          </Navbar.Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nexport default class TopHeader extends Component {\n  render() {\n    return (\n      <div>\n        <Jumbotron>\n          <div className=\"header-div\">\n            <img\n              src=\"/img/background.png\"\n              className=\"header-img\"\n              alt=\"comostipbot logo\"\n            />\n          </div>\n        </Jumbotron>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nconst phantom = {\n  display: \"block\",\n  padding: \"20px\",\n  height: \"60px\",\n  width: \"100%\",\n};\n\nconst foot = {\n  backgroundColor: \"#F8F8F8\",\n  borderTop: \"1px solid #E7E7E7\",\n  textAlign: \"left\",\n  padding: \"20px\",\n  position: \"fixed\",\n  left: \"0\",\n  bottom: \"0\",\n  height: \"60px\",\n  width: \"100%\",\n};\n\nconst link = {\n  color: \"grey\",\n};\n\nexport default class Footer extends React.Component {\n  render() {\n    return (\n      <div style={phantom}>\n        <footer style={foot}>\n          <span>&copy; All rights reserved. @cosmostipbot 2020</span>\n          <span className=\"float-right\">\n            <a href=\"/terms\" style={link}>\n              <span className=\"ml-4\">Terms & Conditions</span>\n            </a>\n            <a href=\"/privacy\" style={link}>\n              <span className=\"ml-4\">Privacy Policy</span>\n            </a>\n          </span>\n        </footer>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nexport default class AboutUs extends Component {\n  render() {\n    return (\n      <div>\n        <Container>\n          <Row>\n            <Col>\n              <h1>About Us</h1>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nexport default class FAQ extends Component {\n  render() {\n    return (\n      <div>\n        <Container>\n          <Row>\n            <Col>\n              <h1>FAQ</h1>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nexport default class Home extends Component {\n  render() {\n    const tweetCommand = [\n      `!tip: Tips are sent through public tweets. On Twitter: Tag @cosmos_tipbot in a tweet and mention !tip <amount> <@username>. Example:\n        @cosmos_tipbot !tip 5 @toschdev\n        would send a 5 ATOM tip to user @toschdev.`,\n    ];\n    const commandsWithExplanation = [\n      `!help: The tip bot will respond to your DM with a list of commands and their functions. If you forget something, use this to get a hint of how to do it!`,\n      `!register: Registers your user ID for an account that is tied to it.  This is used to store your tips. Make sure to withdraw to a private wallet, as the tip bot is not meant to be a long term storage device for ATOM.`,\n      `!balance: This returns the balance of the account linked with your user ID.`,\n      `!account: Returns the account number that is tied to your user ID (currently unique to platform).  You can use this to deposit more ATOM to tip from your personal wallet.`,\n      `!withdraw: Proper usage is !withdraw cosmosxxxxxxxx.  This will send the full balance of your tip account to the provided Cosmos account.  Optional: You can include an amount to withdraw by sending !withdraw <amount> <account>.  Example: !withdraw 1 cosmosxxxxx would withdraw 1 ATOM to account cosmosxxxxx.`,\n      `!donate: Proper usage is !donate 1234.  This will send the requested donation to the Cosmos Tip Bot donation account to help fund development efforts.`,\n      `!setlanguage: Used to change the default language of the bot.  A list of available languages is provided in the !languages command.  Proper use is \"!setlanguage German\" to change your language to German.`,\n      `!languages: Returns a list of languages available for translation`,\n    ];\n    return (\n      <div>\n        <Container>\n          <Row>\n            <Col>\n              <h1>Commands</h1>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <b>Tweet / Group Message Commands</b>\n              <br />\n              <i>\n                Tips are sent through public tweets. These are processed in real\n                time.\n              </i>\n              <br />\n              <br />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <div className=\"commands\">\n                <ul>\n                  {tweetCommand.map((command) => (\n                    <li>{command}</li>\n                  ))}\n                </ul>\n              </div>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <b>DM / PM Commands</b>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <div className=\"commands\">\n                <ul>\n                  {commandsWithExplanation.map((command) => (\n                    <li>{command}</li>\n                  ))}\n                </ul>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nexport default class HowTo extends Component {\n  render() {\n    return (\n      <div>\n        <Container>\n          <Row>\n            <Col>\n              <h1>HowTo</h1>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nexport default class PrivacyPolicy extends Component {\n  render() {\n    return (\n      <div>\n        <Container>\n          <Row>\n            <Col>\n              <h1>Privacy Policy</h1>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nexport default class Terms extends Component {\n  render() {\n    return (\n      <div>\n        <Container>\n          <Row>\n            <Col>\n              <h1>Terms</h1>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport \"./App.css\";\n\nimport TopNavbar from \"./components/TopNavbar\";\nimport TopHeader from \"./components/TopHeader\";\nimport Footer from \"./components/Footer\";\n\nimport { BrowserRouter as Switch, Route } from \"react-router-dom\";\n\nimport AboutUs from \"./pages/AboutUs\";\nimport Faq from \"./pages/Faq\";\nimport Home from \"./pages/Home\";\nimport HowTo from \"./pages/HowTo\";\nimport PrivacyPolicy from \"./pages/PrivacyPolicy\";\nimport Terms from \"./pages/Terms\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TopNavbar />\n      <TopHeader />\n\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/about\" component={AboutUs} />\n        <Route path=\"/faq\" component={Faq} />\n        <Route path=\"/howto\" component={HowTo} />\n        <Route path=\"/privacy\" component={PrivacyPolicy} />\n        <Route path=\"/terms\" component={Terms} />\n      </Switch>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./fonts/Roboto/Roboto-Regular.ttf\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}